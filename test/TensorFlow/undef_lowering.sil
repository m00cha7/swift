// RUN: %target-sil-opt -tf-lower-graph -tf-ensure-single-loop-exit -assume-parsing-unqualified-ownership-sil %s -o /dev/null | %FileCheck %s

import Builtin
import Swift
import TensorFlow

sil @$undefTFBool : $@convention(thin) () -> TensorHandle<Bool>  {
bb0:
 return undef : $TensorHandle<Bool>
}
// CHECK-LABEL: --- TFPartition GraphDef Proto: $undefTFBool
// CHECK: library {
// CHECK:  function {
// CHECK:  node_def {
// CHECK:      name: "UndefConstDTensorHandleLBoolG/job_localhost/replica_0/task_0/device_CPU_0"
// CHECK:      op: "Const"
// CHECK:      attr {
// CHECK:        key: "dtype"
// CHECK:        value {
// CHECK:          type: DT_BOOL
// CHECK:        }
// CHECK:      }
// CHECK:      attr {
// CHECK:        key: "value"
// CHECK:        value {
// CHECK:          tensor {
// CHECK:            dtype: DT_BOOL
// CHECK:            tensor_shape {
// CHECK:            }
// CHECK:            bool_val: false
// CHECK:          }
// CHECK:        }
// CHECK:      }
// CHECK:    }
// CHECK:  }
// CHECK:}

sil @$undefTFInt8 : $@convention(thin) () -> TensorHandle<Int8>  {
bb0:
 return undef : $TensorHandle<Int8>
}
// CHECK-LABEL: --- TFPartition GraphDef Proto: $undefTFInt8
// CHECK: library {
// CHECK:  function {
// CHECK:  node_def {
// CHECK:      name: "UndefConstDTensorHandleLInt8G/job_localhost/replica_0/task_0/device_CPU_0"
// CHECK:      op: "Const"
// CHECK:      attr {
// CHECK:        key: "dtype"
// CHECK:        value {
// CHECK:          type: DT_INT8
// CHECK:        }
// CHECK:      }
// CHECK:      attr {
// CHECK:        key: "value"
// CHECK:        value {
// CHECK:          tensor {
// CHECK:            dtype: DT_INT8
// CHECK:            tensor_shape {
// CHECK:            }
// CHECK:            int_val: -86
// CHECK:          }
// CHECK:        }
// CHECK:      }
// CHECK:    }
// CHECK:  }
// CHECK:}

sil @$undefTFUInt8 : $@convention(thin) () -> TensorHandle<UInt8>  {
bb0:
 return undef : $TensorHandle<UInt8>
}
// CHECK-LABEL: --- TFPartition GraphDef Proto: $undefTFUInt8
// CHECK: library {
// CHECK:  function {
// CHECK:  node_def {
// CHECK:      name: "UndefConstDTensorHandleLUInt8G/job_localhost/replica_0/task_0/device_CPU_0"
// CHECK:      op: "Const"
// CHECK:      attr {
// CHECK:        key: "dtype"
// CHECK:        value {
// CHECK:          type: DT_UINT8
// CHECK:        }
// CHECK:      }
// CHECK:      attr {
// CHECK:        key: "value"
// CHECK:        value {
// CHECK:          tensor {
// CHECK:            dtype: DT_UINT8
// CHECK:            tensor_shape {
// CHECK:            }
// CHECK:            int_val: 170
// CHECK:          }
// CHECK:        }
// CHECK:      }
// CHECK:    }
// CHECK:  }
// CHECK:}

sil @$undefTFInt16 : $@convention(thin) () -> TensorHandle<Int16>  {
bb0:
 return undef : $TensorHandle<Int16>
}
// CHECK-LABEL: --- TFPartition GraphDef Proto: $undefTFInt16
// CHECK: library {
// CHECK:  function {
// CHECK:  node_def {
// CHECK:      name: "UndefConstDTensorHandleLInt16G/job_localhost/replica_0/task_0/device_CPU_0"
// CHECK:      op: "Const"
// CHECK:      attr {
// CHECK:        key: "dtype"
// CHECK:        value {
// CHECK:          type: DT_INT16
// CHECK:        }
// CHECK:      }
// CHECK:      attr {
// CHECK:        key: "value"
// CHECK:        value {
// CHECK:          tensor {
// CHECK:            dtype: DT_INT16
// CHECK:            tensor_shape {
// CHECK:            }
// CHECK:            int_val: -21846
// CHECK:          }
// CHECK:        }
// CHECK:      }
// CHECK:    }
// CHECK:  }
// CHECK:}

sil @$undefTFUInt16 : $@convention(thin) () -> TensorHandle<UInt16>  {
bb0:
 return undef : $TensorHandle<UInt16>
}
// CHECK-LABEL: --- TFPartition GraphDef Proto: $undefTFUInt16
// CHECK: library {
// CHECK:  function {
// CHECK:  node_def {
// CHECK:      name: "UndefConstDTensorHandleLUInt16G/job_localhost/replica_0/task_0/device_CPU_0"
// CHECK:      op: "Const"
// CHECK:      attr {
// CHECK:        key: "dtype"
// CHECK:        value {
// CHECK:          type: DT_UINT16
// CHECK:        }
// CHECK:      }
// CHECK:      attr {
// CHECK:        key: "value"
// CHECK:        value {
// CHECK:          tensor {
// CHECK:            dtype: DT_UINT16
// CHECK:            tensor_shape {
// CHECK:            }
// CHECK:            int_val: 43690
// CHECK:          }
// CHECK:        }
// CHECK:      }
// CHECK:    }
// CHECK:  }
// CHECK:}


sil @$undefTFInt32 : $@convention(thin) () -> TensorHandle<Int32>  {
bb0:
 return undef : $TensorHandle<Int32>
}
// CHECK-LABEL: --- TFPartition GraphDef Proto: $undefTFInt32
// CHECK: library {
// CHECK:  function {
// CHECK:  node_def {
// CHECK:      name: "UndefConstDTensorHandleLInt32G/job_localhost/replica_0/task_0/device_CPU_0"
// CHECK:      op: "Const"
// CHECK:      attr {
// CHECK:        key: "dtype"
// CHECK:        value {
// CHECK:          type: DT_INT32
// CHECK:        }
// CHECK:      }
// CHECK:      attr {
// CHECK:        key: "value"
// CHECK:        value {
// CHECK:          tensor {
// CHECK:            dtype: DT_INT32
// CHECK:            tensor_shape {
// CHECK:            }
// CHECK:            int_val: 11184810
// CHECK:          }
// CHECK:        }
// CHECK:      }
// CHECK:    }
// CHECK:  }
// CHECK:}

sil @$undefTFUInt32 : $@convention(thin) () -> TensorHandle<UInt32>  {
bb0:
 return undef : $TensorHandle<UInt32>
}
// CHECK-LABEL: --- TFPartition GraphDef Proto: $undefTFUInt32
// CHECK: library {
// CHECK:  function {
// CHECK:  node_def {
// CHECK:      name: "UndefConstDTensorHandleLUInt32G/job_localhost/replica_0/task_0/device_CPU_0"
// CHECK:      op: "Const"
// CHECK:      attr {
// CHECK:        key: "dtype"
// CHECK:        value {
// CHECK:          type: DT_UINT32
// CHECK:        }
// CHECK:      }
// CHECK:      attr {
// CHECK:        key: "value"
// CHECK:        value {
// CHECK:          tensor {
// CHECK:            dtype: DT_UINT32
// CHECK:            tensor_shape {
// CHECK:            }
// CHECK:            uint32_val: 11184810
// CHECK:          }
// CHECK:        }
// CHECK:      }
// CHECK:    }
// CHECK:  }
// CHECK:}

sil @$undefTFInt64: $@convention(thin) () -> TensorHandle<Int64>  {
bb0:
 return undef : $TensorHandle<Int64>
}
// CHECK-LABEL: --- TFPartition GraphDef Proto: $undefTFInt64
// CHECK: library {
// CHECK:  function {
// CHECK:  node_def {
// CHECK:      name: "UndefConstDTensorHandleLInt64G/job_localhost/replica_0/task_0/device_CPU_0"
// CHECK:      op: "Const"
// CHECK:      attr {
// CHECK:        key: "dtype"
// CHECK:        value {
// CHECK:          type: DT_INT64
// CHECK:        }
// CHECK:      }
// CHECK:      attr {
// CHECK:        key: "value"
// CHECK:        value {
// CHECK:          tensor {
// CHECK:            dtype: DT_INT64
// CHECK:            tensor_shape {
// CHECK:            }
// CHECK:            int64_val: 2863311530
// CHECK:          }
// CHECK:        }
// CHECK:      }
// CHECK:    }
// CHECK:  }
// CHECK:}

sil @$undefTFUInt64 : $@convention(thin) () -> TensorHandle<UInt64>  {
bb0:
 return undef : $TensorHandle<UInt64>
}
// CHECK-LABEL: --- TFPartition GraphDef Proto: $undefTFUInt64
// CHECK: library {
// CHECK:  function {
// CHECK:  node_def {
// CHECK:      name: "UndefConstDTensorHandleLUInt64G/job_localhost/replica_0/task_0/device_CPU_0"
// CHECK:      op: "Const"
// CHECK:      attr {
// CHECK:        key: "dtype"
// CHECK:        value {
// CHECK:          type: DT_UINT64
// CHECK:        }
// CHECK:      }
// CHECK:      attr {
// CHECK:        key: "value"
// CHECK:        value {
// CHECK:          tensor {
// CHECK:            dtype: DT_UINT64
// CHECK:            tensor_shape {
// CHECK:            }
// CHECK:            uint64_val: 2863311530
// CHECK:          }
// CHECK:        }
// CHECK:      }
// CHECK:    }
// CHECK:  }
// CHECK:}


sil @$undefTFFloat : $@convention(thin) () -> TensorHandle<Float>  {
bb0:
 return undef : $TensorHandle<Float>
}
// CHECK-LABEL: --- TFPartition GraphDef Proto: $undefTFFloat
// CHECK: library {
// CHECK:  function {
// CHECK:  node_def {
// CHECK:      name: "UndefConstDTensorHandleLFloatG/job_localhost/replica_0/task_0/device_CPU_0"
// CHECK:      op: "Const"
// CHECK:      attr {
// CHECK:        key: "dtype"
// CHECK:        value {
// CHECK:          type: DT_FLOAT
// CHECK:        }
// CHECK:      }
// CHECK:      attr {
// CHECK:        key: "value"
// CHECK:        value {
// CHECK:          tensor {
// CHECK:            dtype: DT_FLOAT
// CHECK:            tensor_shape {
// CHECK:            }
// CHECK:            float_val: 1
// CHECK:          }
// CHECK:        }
// CHECK:      }
// CHECK:    }
// CHECK:  }
// CHECK:}

sil @$undefTFDouble : $@convention(thin) () -> TensorHandle<Double>  {
bb0:
 return undef : $TensorHandle<Double>
}
// CHECK-LABEL: --- TFPartition GraphDef Proto: $undefTFDouble
// CHECK: library {
// CHECK:  function {
// CHECK:  node_def {
// CHECK:      name: "UndefConstDTensorHandleLDoubleG/job_localhost/replica_0/task_0/device_CPU_0"
// CHECK:      op: "Const"
// CHECK:      attr {
// CHECK:        key: "dtype"
// CHECK:        value {
// CHECK:          type: DT_DOUBLE
// CHECK:        }
// CHECK:      }
// CHECK:      attr {
// CHECK:        key: "value"
// CHECK:        value {
// CHECK:          tensor {
// CHECK:            dtype: DT_DOUBLE
// CHECK:            tensor_shape {
// CHECK:            }
// CHECK:            double_val: 2
// CHECK:          }
// CHECK:        }
// CHECK:      }
// CHECK:    }
// CHECK:  }
// CHECK:}

sil @$undefDuplicates : $@convention(thin) () -> TensorHandle<Bool>  {
bb0:
  br bb1(undef : $TensorHandle<Bool>)
bb1(%0 : $TensorHandle<Bool>):
  return undef : $TensorHandle<Bool>
}
// CHECK-LABEL: --- TFPartition GraphDef Proto: $undefDuplicates
// CHECK:     node_def {
// CHECK:       name: "UndefConstDTensorHandleLBoolG/job_localhost/replica_0/task_0/device_CPU_0"
// CHECK:       op: "Const"
// CHECK:       attr {
// CHECK:         key: "dtype"
// CHECK:         value {
// CHECK:           type: DT_BOOL
// CHECK:         }
// CHECK:       }
// CHECK:       attr {
// CHECK:         key: "value"
// CHECK:         value {
// CHECK:           tensor {
// CHECK:             dtype: DT_BOOL
// CHECK:             tensor_shape {
// CHECK:             }
// CHECK:             bool_val: false
// CHECK:           }
// CHECK:         }
// CHECK:       }
// CHECK:     }
// CHECK:     node_def {
// CHECK:       name: "UndefConstDTensorHandleLBoolG/job_localhost/replica_0/task_0/device_CPU_0_1"
// CHECK:       op: "Const"
// CHECK:       attr {
// CHECK:         key: "dtype"
// CHECK:         value {
// CHECK:           type: DT_BOOL
// CHECK:         }
// CHECK:       }
// CHECK:       attr {
// CHECK:         key: "value"
// CHECK:         value {
// CHECK:           tensor {
// CHECK:             dtype: DT_BOOL
// CHECK:             tensor_shape {
// CHECK:             }
// CHECK:             bool_val: false
// CHECK:           }
// CHECK:         }
// CHECK:       }
// CHECK:     }
